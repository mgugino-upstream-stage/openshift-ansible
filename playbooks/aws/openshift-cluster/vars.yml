---
debug_level: 2

deployment_rhel7_ent_base:
  # rhel-7.1, requires cloud access subscription
  image: "{{ lookup('oo_option', 'ec2_image') | default('ami-10251c7a', True) }}"
  image_name: "{{ lookup('oo_option', 'ec2_image_name') | default(None, True) }}"
  region: "{{ lookup('oo_option', 'ec2_region') | default('us-east-1', True) }}"
  ssh_user: ec2-user
  become: yes
  keypair: "{{ lookup('oo_option', 'ec2_keypair') | default('libra', True) }}"
  type: "{{ lookup('oo_option', 'ec2_instance_type') | default('m4.large', True) }}"
  security_groups: "{{ lookup('oo_option', 'ec2_security_groups') | default([ 'public' ], True) }}"
  vpc_subnet: "{{ lookup('oo_option', 'ec2_vpc_subnet') | default(omit, True) }}"
  assign_public_ip: "{{ lookup('oo_option', 'ec2_assign_public_ip') | default(omit, True) }}"

deployment_vars:
  origin:
    # centos-7, requires marketplace
    image: "{{ lookup('oo_option', 'ec2_image') | default('ami-6d1c2007', True) }}"
    image_name: "{{ lookup('oo_option', 'ec2_image_name') | default(None, True) }}"
    region: "{{ lookup('oo_option', 'ec2_region') | default('us-east-1', True) }}"
    ssh_user: centos
    become: yes
    keypair: "{{ lookup('oo_option', 'ec2_keypair') | default('libra', True) }}"
    type: "{{ lookup('oo_option', 'ec2_instance_type') | default('m4.large', True) }}"
    security_groups: "{{ lookup('oo_option', 'ec2_security_groups') | default([ 'public' ], True) }}"
    vpc_subnet: "{{ lookup('oo_option', 'ec2_vpc_subnet') | default(omit, True) }}"
    assign_public_ip: "{{ lookup('oo_option', 'ec2_assign_public_ip') | default(omit, True) }}"

  enterprise: "{{ deployment_rhel7_ent_base }}"
  openshift-enterprise: "{{ deployment_rhel7_ent_base }}"
  atomic-enterprise: "{{ deployment_rhel7_ent_base }}"

# Default values for provisioning.
provision_cluster_id: "{{ openshift_cluster_id | default('default') }}"

provision_aws_yum_repos_default:
  - name: openshift-repo
    file: openshift-repo
    description: OpenShift Builds
    baseurl: https://mirror.openshift.com/enterprise/online-int/latest/x86_64/os/
    enabled: yes
    gpgcheck: no
    sslverify: no
    sslclientcert: "/var/lib/yum/client-cert.pem"
    sslclientkey: "/var/lib/yum/client-key.pem"
    gpgkey: "https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-release https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-beta https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-openshifthosted"

provision_aws_openshift_ami_tags_default:
  bootstrap: "true"
  openshift-created: "true"
  clusterid: "{{ provision_cluster_id }}"

provision_aws_default_build: # build specific variables here
  ami_name: "{{ provision_ami_name | default("openshift-gi") }}"
  base_image: "{{ provision_aws_build_ami | default("TBD") }}" # base image for AMI to build from
  yum_repositories: "{{ provision_aws_yum_repos | default(provision_aws_yum_repos_default) }}"
  # when creating an encrypted AMI please specify use_encryption
  use_encryption: False
  openshift_ami_tags: "{{ provision_aws_openshift_ami_tags | default(provision_aws_openshift_ami_tags_default) }}"

provision_aws_iam_cert_ca_default:
  name: "{{ provision_cluster_id }}_openshift"
  cert_path: '/path/to/wildcard.<clusterid>.example.com.crt'
  key_path: '/path/to/wildcard.<clusterid>.example.com.key'
  chain_path: '/path/to/cert.ca.crt'

provision_aws_vpc_default:
  cidr: 172.31.0.0/16
  subnets:
    us-east-1:  # These are us-east-1 region defaults. Ensure this matches your region
    - cidr: 172.31.48.0/20
      az: "us-east-1c"
    - cidr: 172.31.32.0/20
      az: "us-east-1e"
    - cidr: 172.31.16.0/20
      az: "us-east-1a"

provision: "{{ openshift_aws_provision | default(provision_default) }}"

# Example of how to create dictionary for provision_aws_instance_users
#provision_aws_instance_users:
#  - key_name: myuser_key
#    username: myuser
#    pub_key: |
#           ssh-rsa AAAA== myuser@system

provision_default:
  region: "{{ provision_aws_region | default('us-east-1') }}"
  build: "{{ provision_aws_default_build }}"
  # Use s3 backed registry storage
  openshift_registry_s3: "{{ openshift_registry_s3 | default(True) }}"
  # if using custom certificates these are required for the ELB
  iam_cert_ca: "{{ provision_aws_iam_cert_ca | default(provision_aws_iam_cert_ca_default) }}"
  instance_users: "{{ provision_aws_instance_users | default([]) }}"

  node_group_config:
    tags:
      clusterid: "{{ provision_cluster_id }}"
      environment: "{{ provision_aws_environment | default('stg') }}"
    ssh_key_name: "{{ provision_aws_ssh_key_name }}"

    # master specific cluster node settings
    master:
      instance_type: m4.xlarge
      ami: ami-cdeec8b6  # if using an encrypted AMI this will be replaced
      volumes:
      - device_name: /dev/sdb
        volume_size: 100
        device_type: gp2
        delete_on_termination: False
      health_check:
        period: 60
        type: EC2
      min_size: 3
      max_size: 3
      desired_size: 3
      tags:
        host-type: master
        sub-host-type: default
      wait_for_instances: True

    # compute specific cluster node settings
    compute:
      instance_type: m4.xlarge
      ami: ami-cdeec8b6
      volumes:
      - device_name: /dev/sdb
        volume_size: 100
        device_type: gp2
        delete_on_termination: True
      health_check:
        period: 60
        type: EC2
      min_size: 3
      max_size: 100
      desired_size: 3
      tags:
        host-type: node
        sub-host-type: compute

    # infra specific cluster node settings
    infra:
      instance_type: m4.xlarge
      ami: ami-cdeec8b6
      volumes:
      - device_name: /dev/sdb
        volume_size: 100
        device_type: gp2
        delete_on_termination: True
      health_check:
        period: 60
        type: EC2
      min_size: 2
      max_size: 20
      desired_size: 2
      tags:
        host-type: node
        sub-host-type: infra

  # vpc settings
  vpc: "{{ provision_aws_vpc | default(provision_aws_vpc_default) }}"
